import java.util.Scanner;
public class Delivery {
    //Задание 3
    //Имеется N клиентов, которым компания производитель должна доставить товар. Сколько существует возможных
    // маршрутов доставки товара, с учетом того, что товар будет доставлять одна машина? Используя IntelliJ IDEA,
    // создайте класс Delivery. Напишите программу, которая будет рассчитывать и выводить на экран количество возможных
    // вариантов доставки товара. Для решения задачи, используйте факториал N!, рассчитываемый с помощью рекурсии.
    // Объясните, почему не рекомендуется использовать рекурсию для расчета факториала. Укажите слабые места данного подхода.


    static int fact (int a) {
        if (a == 0) {
            return 1;
        }
        else {
            return a * fact(a - 1);
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        System.out.println(fact(a));
    }
}
// Объясните, почему не рекомендуется использовать рекурсию для расчета факториала. Укажите слабые места данного подхода.
// Не рекомендуется использовать рекурсию для расчета факториала, так как это во-первых занимает гораздо больше
// пемяти по сравнению с тем же обычным циклом, во-вторых, сложнее прописывается и еще, что не мало важно, очень
// сильно затрудняется читабельность кода. В общем, использовать рекурсию в простых примерах - не целесообразно.